---
#####################################################################
# (C) Copyright 2023 Hewlett Packard Enterprise Development LP.
#####################################################################

- name: Check if Serviceguard is already installed
  shell: |
      rpm -q --queryformat '%{version}' serviceguard
  register: sgver_result
  changed_when: no
  ignore_errors: true

- name: Skip the node if Serviceguard is already installed
  fail:
    msg: "Serviceguard version {{ sgver_result.stdout_lines }} is 
          already installed use upgrade option in playbook" 
  when: sgver_result.rc == 0

- set_fact:
      iso_location: "{{ sglx_inst_upg_additional_params.iso_params.iso_location }}"

- name: Mount the ISO on the node
  include_tasks: roles/common/tasks/sglx_mount_iso.yml
  vars:
      mount_result:
          rc: 0
          opmsg: "" 
  when: sgver_result.rc != 0
  ignore_errors: true

- set_fact:
      mount_result:
          rc: 1
          opmsg: "Skipping install {{ ansible_hostname }} as Serviceguard is 
                  already installed use upgrade option in playbook"
  when: sgver_result.rc == 0

- name: Install Serviceguard software with flex-storage utility
  shell: |
      {{ mount_dir }}/cminstaller -d {{ mount_dir }} -w {{ sglx_add_on_inst_upg_params.sglx_addon }} -u flex-storage
  environment:
      SGMGR_ENV: "{{ sglx_sgmgr_password }}"
      ACCEPT_EULA: "Y"
  register: cminstaller_output
  when:
      - mount_result.rc == 0
      - sglx_add_on_inst_upg_params.storage_flex_add_on.install_upgrade
- name: Summarize installation | Success
  debug:
      msg: " Installation of Serviceguard on node
             Success: \n {{ cminstaller_output.stdout_lines }}"
  when:
      - cminstaller_output.rc == 0
      - sglx_add_on_inst_upg_params.storage_flex_add_on.install_upgrade
  ignore_errors: true

- name: Summarize installation | Failure
  debug:
      msg: " Installation of Serviceguard on node
             Failed: \n {{ cminstaller_output.stdout_lines }}"
  when:
      - cminstaller_output.rc != 0
      - sglx_add_on_inst_upg_params.storage_flex_add_on.install_upgrade
  ignore_errors: true

- name: Install Serviceguard software
  shell: |
      {{ mount_dir }}/cminstaller -d {{ mount_dir }} -w {{ sglx_add_on_inst_upg_params.sglx_addon }}
  environment:
      SGMGR_ENV: "{{ sglx_sgmgr_password }}"
      ACCEPT_EULA: "Y"
  register: cminstaller_output
  when: 
      - mount_result.rc == 0
      - not sglx_add_on_inst_upg_params.storage_flex_add_on.install_upgrade

- set_fact:
      cminstaller_output:
          rc: 1
          stdout_lines: "{{ mount_result.opmsg }}"
  when: mount_result.rc != 0
 
- name: Summarize installation | Success 
  debug:
      msg: " Installation of Serviceguard on node 
             Success: \n {{ cminstaller_output.stdout_lines }}"
  when:
      - cminstaller_output.rc == 0
      - not sglx_add_on_inst_upg_params.storage_flex_add_on.install_upgrade
  ignore_errors: true 

- name: Summarize installation | Failure
  debug:
      msg: " Installation of Serviceguard on node 
             Failed: \n {{ cminstaller_output.stdout_lines }}"
  when:
      - cminstaller_output.rc != 0
      - not sglx_add_on_inst_upg_params.storage_flex_add_on.install_upgrade
  ignore_errors: true 

- name: Unmount the ISO on the node
  include_tasks: roles/common/tasks/sglx_umount_iso.yml
  vars:
      umount_result:
          rc: 0
          opmsg: "" 
  ignore_errors: true
 
- debug:
      msg: "Umount of ISO returned with {{ umount_result.rc }} 
            and {{ umount_result.opmsg }}"  